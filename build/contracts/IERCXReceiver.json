{
  "contractName": "IERCXReceiver",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERCXReceived",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @title ERCX token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERCX asset contracts.\n */\ncontract IERCXReceiver {\n  /**\n    * @notice Handle the receipt of an NFT\n    * @dev The ERCX smart contract calls this function on the recipient\n    * after a {IERCX-safeTransferFrom}. This function MUST return the function selector,\n    * otherwise the caller will revert the transaction. The selector to be\n    * returned can be obtained as `this.onERCXReceived.selector`. This\n    * function MAY throw to revert and reject the transfer.\n    * Note: the ERCX contract address is always the message sender.\n    * @param operator The address which called `safeTransferFrom` function\n    * @param from The address which previously owned the token\n    * @param itemId The NFT identifier which is being transferred\n    * @param data Additional data with no specified format\n    * @return bytes4 `bytes4(keccak256(\"onERCXReceived(address,address,uint256,uint256,bytes)\"))`\n    */\n  function onERCXReceived(\n    address operator,\n    address from,\n    uint256 itemId,\n    uint256 layer,\n    bytes memory data\n  )\n    public\n    returns(bytes4);\n}\n",
  "sourcePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Interface/IERCXReceiver.sol",
  "ast": {
    "absolutePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Interface/IERCXReceiver.sol",
    "exportedSymbols": {
      "IERCXReceiver": [
        2564
      ]
    },
    "id": 2565,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2548,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERCX token receiver interface\n@dev Interface for any contract that wants to support safeTransfers\nfrom ERCX asset contracts.",
        "fullyImplemented": false,
        "id": 2564,
        "linearizedBaseContracts": [
          2564
        ],
        "name": "IERCXReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Handle the receipt of an NFT\n@dev The ERCX smart contract calls this function on the recipient\nafter a {IERCX-safeTransferFrom}. This function MUST return the function selector,\notherwise the caller will revert the transaction. The selector to be\nreturned can be obtained as `this.onERCXReceived.selector`. This\nfunction MAY throw to revert and reject the transfer.\nNote: the ERCX contract address is always the message sender.\n@param operator The address which called `safeTransferFrom` function\n@param from The address which previously owned the token\n@param itemId The NFT identifier which is being transferred\n@param data Additional data with no specified format\n@return bytes4 `bytes4(keccak256(\"onERCXReceived(address,address,uint256,uint256,bytes)\"))`",
            "id": 2563,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERCXReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1082:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2552,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1104:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2554,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1122:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2556,
                  "name": "layer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1142:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2558,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1161:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2557,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1076:106:11"
            },
            "returnParameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2561,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1206:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1205:8:11"
            },
            "scope": 2564,
            "src": "1053:161:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2565,
        "src": "174:1042:11"
      }
    ],
    "src": "0:1217:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Interface/IERCXReceiver.sol",
    "exportedSymbols": {
      "IERCXReceiver": [
        2564
      ]
    },
    "id": 2565,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2548,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERCX token receiver interface\n@dev Interface for any contract that wants to support safeTransfers\nfrom ERCX asset contracts.",
        "fullyImplemented": false,
        "id": 2564,
        "linearizedBaseContracts": [
          2564
        ],
        "name": "IERCXReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Handle the receipt of an NFT\n@dev The ERCX smart contract calls this function on the recipient\nafter a {IERCX-safeTransferFrom}. This function MUST return the function selector,\notherwise the caller will revert the transaction. The selector to be\nreturned can be obtained as `this.onERCXReceived.selector`. This\nfunction MAY throw to revert and reject the transfer.\nNote: the ERCX contract address is always the message sender.\n@param operator The address which called `safeTransferFrom` function\n@param from The address which previously owned the token\n@param itemId The NFT identifier which is being transferred\n@param data Additional data with no specified format\n@return bytes4 `bytes4(keccak256(\"onERCXReceived(address,address,uint256,uint256,bytes)\"))`",
            "id": 2563,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERCXReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1082:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2552,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1104:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2554,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1122:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2556,
                  "name": "layer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1142:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2558,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1161:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2557,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1076:106:11"
            },
            "returnParameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2561,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "1206:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1205:8:11"
            },
            "scope": 2564,
            "src": "1053:161:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2565,
        "src": "174:1042:11"
      }
    ],
    "src": "0:1217:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-11-30T03:58:21.975Z",
  "devdoc": {
    "details": "Interface for any contract that wants to support safeTransfers from ERCX asset contracts.",
    "methods": {
      "onERCXReceived(address,address,uint256,uint256,bytes)": {
        "details": "The ERCX smart contract calls this function on the recipient after a {IERCX-safeTransferFrom}. This function MUST return the function selector, otherwise the caller will revert the transaction. The selector to be returned can be obtained as `this.onERCXReceived.selector`. This function MAY throw to revert and reject the transfer. Note: the ERCX contract address is always the message sender.",
        "params": {
          "data": "Additional data with no specified format",
          "from": "The address which previously owned the token",
          "itemId": "The NFT identifier which is being transferred",
          "operator": "The address which called `safeTransferFrom` function"
        },
        "return": "bytes4 `bytes4(keccak256(\"onERCXReceived(address,address,uint256,uint256,bytes)\"))`"
      }
    },
    "title": "ERCX token receiver interface"
  },
  "userdoc": {
    "methods": {
      "onERCXReceived(address,address,uint256,uint256,bytes)": {
        "notice": "Handle the receipt of an NFT"
      }
    }
  }
}