{
  "contractName": "ERCXMetadata",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "getApprovedTransfer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "approveTransferLimitFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "setTransferLimitFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "revokeTransferLimitFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "approveTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "superOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "getApprovedTransferLimit",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "layer",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "layer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "satus",
          "type": "bool"
        }
      ],
      "name": "TransferLimitSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "ApprovalTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "layer",
          "type": "uint256"
        }
      ],
      "name": "ApprovalTransferLimit",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "itemURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200291a3803806200291a833981018060405260408110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b828101905060208101848111156200006757600080fd5b81518560018202830111640100000000821117156200008557600080fd5b50509291906020018051640100000000811115620000a257600080fd5b82810190506020810184811115620000b957600080fd5b8151856001820283011164010000000082111715620000d757600080fd5b50509291905050506200011c6301ffc9a77c01000000000000000000000000000000000000000000000000000000000262000672640100000000026401000000009004565b6200057b60405180807f7265766f6b655472616e736665724c696d6974466f722875696e743235362cc281526020017fa075696e743235362900000000000000000000000000000000000000000000008152506029019050604051809103902060405180807f7365745472616e736665724c696d6974466f722875696e743235362cc2a0756981526020017f6e743235362900000000000000000000000000000000000000000000000000008152506026019050604051809103902060405180807f676574417070726f7665645472616e736665724c696d69742875696e7432353681526020017f2cc2a075696e7432353629000000000000000000000000000000000000000000815250602b019050604051809103902060405180807f617070726f76655472616e736665724c696d6974466f7228616464726573732c81526020017fc2a075696e743235362cc2a075696e74323536290000000000000000000000008152506034019050604051809103902060405180807f6973417070726f766564466f72416c6c28616464726573732cc2a0616464726581526020017f73732900000000000000000000000000000000000000000000000000000000008152506023019050604051809103902060405180807f736574417070726f76616c466f72416c6c28616464726573732cc2a0626f6f6c81526020017f29000000000000000000000000000000000000000000000000000000000000008152506021019050604051809103902060405180807f676574417070726f7665645472616e736665722875696e743235362cc2a0756981526020017f6e743235362900000000000000000000000000000000000000000000000000008152506026019050604051809103902060405180807f617070726f76655472616e7366657228616464726573732cc2a075696e74323581526020017f362cc2a075696e74323536290000000000000000000000000000000000000000815250602c019050604051809103902060405180807f736166655472616e7366657246726f6d28616464726573732cc2a0616464726581526020017f73732cc2a075696e743235362cc2a075696e743235362cc2a062797465732900815250603f019050604051809103902060405180807f736166655472616e7366657246726f6d28616464726573732cc2a0616464726581526020017f73732cc2a075696e743235362cc2a075696e74323536290000000000000000008152506037019050604051809103902060405180807f73757065724f662875696e743235362cc2a075696e7432353629000000000000815250601a019050604051809103902060405180807f6f776e65724f662875696e743235362cc2a075696e7432353629000000000000815250601a019050604051809103902060405180807f62616c616e63654f6628616464726573732cc2a075696e743235362900000000815250601c019050604051809103902018181818181818181818181862000672640100000000026401000000009004565b81600890805190602001906200059392919062000799565b508060099080519060200190620005ac92919062000799565b506200066a60405180807f6974656d5552492875696e7432353629000000000000000000000000000000008152506010019050604051809103902060405180807f73796d626f6c28290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f6e616d652829000000000000000000000000000000000000000000000000000081525060060190506040518091039020181862000672640100000000026401000000009004565b505062000848565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620007dc57805160ff19168380011785556200080d565b828001600101855582156200080d579182015b828111156200080c578251825591602001919060010190620007ef565b5b5090506200081c919062000820565b5090565b6200084591905b808211156200084157600081600090555060010162000827565b5090565b90565b6120c280620008586000396000f3fe6080604052600436106100f0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062fdd58e146100f557806301ffc9a71461016457806306fdde03146101d65780630febdd491461026657806321d89132146102eb5780634eeb9599146103705780636aeae077146103d557806395d89b411461041a5780639dc1c616146104aa578063a22cb465146104ef578063a4fdae9e1461054c578063acb35dc7146105b1578063b4f453eb14610665578063c34e2af2146106ea578063d9dad80d1461076f578063e985e9c5146107f4578063f242432a1461087d575b600080fd5b34801561010157600080fd5b5061014e6004803603604081101561011857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610999565b6040518082815260200191505060405180910390f35b34801561017057600080fd5b506101bc6004803603602081101561018757600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610a3c565b604051808215151515815260200191505060405180910390f35b3480156101e257600080fd5b506101eb610aa3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022b578082015181840152602081019050610210565b50505050905090810190601f1680156102585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027257600080fd5b506102e96004803603608081101561028957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610b45565b005b3480156102f757600080fd5b5061032e6004803603604081101561030e57600080fd5b810190808035906020019092919080359060200190929190505050610b68565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037c57600080fd5b506103d36004803603606081101561039357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610bcc565b005b3480156103e157600080fd5b50610418600480360360408110156103f857600080fd5b810190808035906020019092919080359060200190929190505050610dc3565b005b34801561042657600080fd5b5061042f610f54565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561046f578082015181840152602081019050610454565b50505050905090810190601f16801561049c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104b657600080fd5b506104ed600480360360408110156104cd57600080fd5b810190808035906020019092919080359060200190929190505050610ff6565b005b3480156104fb57600080fd5b5061054a6004803603604081101561051257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061118a565b005b34801561055857600080fd5b506105af6004803603606081101561056f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506112c6565b005b3480156105bd57600080fd5b506105ea600480360360208110156105d457600080fd5b8101908080359060200190929190505050611430565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062a57808201518184015260208101905061060f565b50505050905090810190601f1680156106575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561067157600080fd5b506106a86004803603604081101561068857600080fd5b8101908080359060200190929190803590602001909291905050506114fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106f657600080fd5b5061072d6004803603604081101561070d57600080fd5b810190808035906020019092919080359060200190929190505050611520565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561077b57600080fd5b506107b26004803603604081101561079257600080fd5b810190808035906020019092919080359060200190929190505050611584565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561080057600080fd5b506108636004803603604081101561081757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611614565b604051808215151515815260200191505060405180910390f35b34801561088957600080fd5b50610997600480360360a08110156108a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561091157600080fd5b82018360208201111561092357600080fd5b8035906020019184600183028401116401000000008311171561094557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116a8565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109d657600080fd5b6000610a30600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206116d2565b90508091505092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b3b5780601f10610b1057610100808354040283529160200191610b3b565b820191906000526020600020905b815481529060010190602001808311610b1e57829003601f168201915b5050505050905090565b610b628484848460206040519081016040528060008152506116a8565b50505050565b6000610b7483836116e0565b1515610b7f57600080fd5b60026000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000610bd88383611584565b90506000610be684846114fb565b90508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141580610c4f57508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1515610c5a57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cbf57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610cd05750610ccf8233611614565b5b80610ce15750610ce08133611614565b5b1515610cec57600080fd5b8460056000868152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8b1ad3e71a0ec93ec04e081864706fc2ec210a392f687c69eb6ef2b48a07475e8686604051808381526020018281526020019250505060405180910390a35050505050565b610dcd8282611764565b1515610dd857600080fd5b6000610de48383611584565b90506000610df284846114fb565b9050610dfe8484611520565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e3d5750610e3c8233611614565b5b80610e4e5750610e4d8133611614565b5b1515610e5957600080fd5b600060066000868152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055503360076000868152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082843373ffffffffffffffffffffffffffffffffffffffff167f2514331937ebcc84179b9aa52d73834b71963727fd1ea5d8234ee6da14e623686001604051808215151515815260200191505060405180910390a450505050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fec5780601f10610fc157610100808354040283529160200191610fec565b820191906000526020600020905b815481529060010190602001808311610fcf57829003601f168201915b5050505050905090565b6110008282611764565b15151561100c57600080fd5b600060076000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561108f57600080fd5b600160066000858152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600060076000858152602001908152602001600020600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081833373ffffffffffffffffffffffffffffffffffffffff167f2514331937ebcc84179b9aa52d73834b71963727fd1ea5d8234ee6da14e623686000604051808215151515815260200191505060405180910390a4505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156111c557600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006112d28383611584565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561130f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061134f575061134e8133611614565b5b151561135a57600080fd5b8360026000858152602001908152602001600020600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe3d5109fb748529f5f25558d2ca2990867f9c97e6cd0038e06be2afe6538449c8585604051808381526020018281526020019250505060405180910390a350505050565b606061143d8260016116e0565b151561144857600080fd5b600a60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ef5780601f106114c4576101008083540402835291602001916114ef565b820191906000526020600020905b8154815290600101906020018083116114d257829003601f168201915b50505050509050919050565b60008082806001019350905060006115138583611584565b9050809250505092915050565b600061152c83836116e0565b151561153757600080fd5b60056000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60008060016000858152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561160a57600080fd5b8091505092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6116b3338484611844565b15156116be57600080fd5b6116cb8585858585611948565b5050505050565b600081600001549050919050565b60008060016000858152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591505092915050565b600061177083836116e0565b151561180a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f455243583a206f70657261746f7220717565727920666f72206e6f6e6578697381526020017f74656e74206974656d000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60066000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b600061185083836116e0565b151561185b57600080fd5b60006118678484611584565b9050600061187585856114fb565b90508173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614806118dc57508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b8061191b57508573ffffffffffffffffffffffffffffffffffffffff166119038686610b68565b73ffffffffffffffffffffffffffffffffffffffff16145b8061192c575061192b8287611614565b5b8061193d575061193c8187611614565b5b925050509392505050565b61195485858585611973565b6119618585858585611b99565b151561196c57600080fd5b5050505050565b8373ffffffffffffffffffffffffffffffffffffffff166119948383611584565b73ffffffffffffffffffffffffffffffffffffffff161415156119b657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156119f257600080fd5b6119fc8282611dfd565b611a54600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020611fbf565b611aac600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020611fe2565b8260016000848152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288598585604051808381526020018281526020019250505060405180910390a450505050565b6000611bba8573ffffffffffffffffffffffffffffffffffffffff16611ff8565b1515611bc95760019050611df4565b60008573ffffffffffffffffffffffffffffffffffffffff16631c14516233898888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611cc7578082015181840152602081019050611cac565b50505050905090810190601f168015611cf45780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611d1757600080fd5b505af1158015611d2b573d6000803e3d6000fd5b505050506040513d6020811015611d4157600080fd5b8101908080519060200190929190505050905060405180807f6f6e45524358526563656976656428616464726573732c616464726573732c7581526020017f696e743235362c62797465732900000000000000000000000000000000000000815250602d01905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660026000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611edc57600060026000848152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600073ffffffffffffffffffffffffffffffffffffffff1660056000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611fbb57600060056000848152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b611fd76001826000015461200b90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b6000828211151515612085576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b60008284039050809150509291505056fea165627a7a72305820ba5f0b31ce4d658354883765750a6c4105be688cd6be51443bbef75b5fdfea150029",
  "deployedBytecode": "0x6080604052600436106100f0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062fdd58e146100f557806301ffc9a71461016457806306fdde03146101d65780630febdd491461026657806321d89132146102eb5780634eeb9599146103705780636aeae077146103d557806395d89b411461041a5780639dc1c616146104aa578063a22cb465146104ef578063a4fdae9e1461054c578063acb35dc7146105b1578063b4f453eb14610665578063c34e2af2146106ea578063d9dad80d1461076f578063e985e9c5146107f4578063f242432a1461087d575b600080fd5b34801561010157600080fd5b5061014e6004803603604081101561011857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610999565b6040518082815260200191505060405180910390f35b34801561017057600080fd5b506101bc6004803603602081101561018757600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610a3c565b604051808215151515815260200191505060405180910390f35b3480156101e257600080fd5b506101eb610aa3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022b578082015181840152602081019050610210565b50505050905090810190601f1680156102585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027257600080fd5b506102e96004803603608081101561028957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610b45565b005b3480156102f757600080fd5b5061032e6004803603604081101561030e57600080fd5b810190808035906020019092919080359060200190929190505050610b68565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037c57600080fd5b506103d36004803603606081101561039357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610bcc565b005b3480156103e157600080fd5b50610418600480360360408110156103f857600080fd5b810190808035906020019092919080359060200190929190505050610dc3565b005b34801561042657600080fd5b5061042f610f54565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561046f578082015181840152602081019050610454565b50505050905090810190601f16801561049c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104b657600080fd5b506104ed600480360360408110156104cd57600080fd5b810190808035906020019092919080359060200190929190505050610ff6565b005b3480156104fb57600080fd5b5061054a6004803603604081101561051257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061118a565b005b34801561055857600080fd5b506105af6004803603606081101561056f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506112c6565b005b3480156105bd57600080fd5b506105ea600480360360208110156105d457600080fd5b8101908080359060200190929190505050611430565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062a57808201518184015260208101905061060f565b50505050905090810190601f1680156106575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561067157600080fd5b506106a86004803603604081101561068857600080fd5b8101908080359060200190929190803590602001909291905050506114fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106f657600080fd5b5061072d6004803603604081101561070d57600080fd5b810190808035906020019092919080359060200190929190505050611520565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561077b57600080fd5b506107b26004803603604081101561079257600080fd5b810190808035906020019092919080359060200190929190505050611584565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561080057600080fd5b506108636004803603604081101561081757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611614565b604051808215151515815260200191505060405180910390f35b34801561088957600080fd5b50610997600480360360a08110156108a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561091157600080fd5b82018360208201111561092357600080fd5b8035906020019184600183028401116401000000008311171561094557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116a8565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109d657600080fd5b6000610a30600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206116d2565b90508091505092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b3b5780601f10610b1057610100808354040283529160200191610b3b565b820191906000526020600020905b815481529060010190602001808311610b1e57829003601f168201915b5050505050905090565b610b628484848460206040519081016040528060008152506116a8565b50505050565b6000610b7483836116e0565b1515610b7f57600080fd5b60026000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000610bd88383611584565b90506000610be684846114fb565b90508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141580610c4f57508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b1515610c5a57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cbf57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610cd05750610ccf8233611614565b5b80610ce15750610ce08133611614565b5b1515610cec57600080fd5b8460056000868152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8b1ad3e71a0ec93ec04e081864706fc2ec210a392f687c69eb6ef2b48a07475e8686604051808381526020018281526020019250505060405180910390a35050505050565b610dcd8282611764565b1515610dd857600080fd5b6000610de48383611584565b90506000610df284846114fb565b9050610dfe8484611520565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e3d5750610e3c8233611614565b5b80610e4e5750610e4d8133611614565b5b1515610e5957600080fd5b600060066000868152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055503360076000868152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082843373ffffffffffffffffffffffffffffffffffffffff167f2514331937ebcc84179b9aa52d73834b71963727fd1ea5d8234ee6da14e623686001604051808215151515815260200191505060405180910390a450505050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fec5780601f10610fc157610100808354040283529160200191610fec565b820191906000526020600020905b815481529060010190602001808311610fcf57829003601f168201915b5050505050905090565b6110008282611764565b15151561100c57600080fd5b600060076000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561108f57600080fd5b600160066000858152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600060076000858152602001908152602001600020600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081833373ffffffffffffffffffffffffffffffffffffffff167f2514331937ebcc84179b9aa52d73834b71963727fd1ea5d8234ee6da14e623686000604051808215151515815260200191505060405180910390a4505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156111c557600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006112d28383611584565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561130f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061134f575061134e8133611614565b5b151561135a57600080fd5b8360026000858152602001908152602001600020600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe3d5109fb748529f5f25558d2ca2990867f9c97e6cd0038e06be2afe6538449c8585604051808381526020018281526020019250505060405180910390a350505050565b606061143d8260016116e0565b151561144857600080fd5b600a60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ef5780601f106114c4576101008083540402835291602001916114ef565b820191906000526020600020905b8154815290600101906020018083116114d257829003601f168201915b50505050509050919050565b60008082806001019350905060006115138583611584565b9050809250505092915050565b600061152c83836116e0565b151561153757600080fd5b60056000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60008060016000858152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561160a57600080fd5b8091505092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6116b3338484611844565b15156116be57600080fd5b6116cb8585858585611948565b5050505050565b600081600001549050919050565b60008060016000858152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591505092915050565b600061177083836116e0565b151561180a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f455243583a206f70657261746f7220717565727920666f72206e6f6e6578697381526020017f74656e74206974656d000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60066000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b600061185083836116e0565b151561185b57600080fd5b60006118678484611584565b9050600061187585856114fb565b90508173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614806118dc57508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b8061191b57508573ffffffffffffffffffffffffffffffffffffffff166119038686610b68565b73ffffffffffffffffffffffffffffffffffffffff16145b8061192c575061192b8287611614565b5b8061193d575061193c8187611614565b5b925050509392505050565b61195485858585611973565b6119618585858585611b99565b151561196c57600080fd5b5050505050565b8373ffffffffffffffffffffffffffffffffffffffff166119948383611584565b73ffffffffffffffffffffffffffffffffffffffff161415156119b657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156119f257600080fd5b6119fc8282611dfd565b611a54600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020611fbf565b611aac600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020611fe2565b8260016000848152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288598585604051808381526020018281526020019250505060405180910390a450505050565b6000611bba8573ffffffffffffffffffffffffffffffffffffffff16611ff8565b1515611bc95760019050611df4565b60008573ffffffffffffffffffffffffffffffffffffffff16631c14516233898888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611cc7578082015181840152602081019050611cac565b50505050905090810190601f168015611cf45780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611d1757600080fd5b505af1158015611d2b573d6000803e3d6000fd5b505050506040513d6020811015611d4157600080fd5b8101908080519060200190929190505050905060405180807f6f6e45524358526563656976656428616464726573732c616464726573732c7581526020017f696e743235362c62797465732900000000000000000000000000000000000000815250602d01905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660026000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611edc57600060026000848152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600073ffffffffffffffffffffffffffffffffffffffff1660056000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611fbb57600060056000848152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b611fd76001826000015461200b90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b6000828211151515612085576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b60008284039050809150509291505056fea165627a7a72305820ba5f0b31ce4d658354883765750a6c4105be688cd6be51443bbef75b5fdfea150029",
  "sourceMap": "88:2051:4:-;;;526:228;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:228:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;526:228:4;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;526:228:4;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;526:228:4;;;;;;718:40:30;385:10;737:20;;718:18;;;:40;;;:::i;:::-;2521:37:0;2357:54;;;;;;;;;;;;;;;;;;;;;;;;2291:51;;;;;;;;;;;;;;;;;;;;;;;;2220:56;;;;;;;;;;;;;;;;;;;;;;;;2140:65;;;;;;;;;;;;;;;;;;;;;;;;2077:48;;;;;;;;;;;;;;;;;;;;;;;;2016:46;;;;;;;;;;;;;;;;;;;;;;;;1950:51;;;;;;;;;;;;;;;;;;;;;;;;1878:57;;;;;;;;;;;;;;;;;;;;;;;;1787:76;;;;;;;;;;;;;;;;;;;;;;;;1704:68;;;;;;;;;;;;;;;;;;;;;;;;1650:39;;;;;;;;;;;;;;;;;;;1596;;;;;;;;;;;;;;;;;;;1540:41;;;;;;;;;;;;;;;;;;;1533:103;:157;:240;:331;:403;:469;:530;:593;:673;:744;:810;:879;2521:18;;;:37;;;:::i;:::-;601:4:4;593:5;:12;;;;;;;;;;;;:::i;:::-;;621:6;611:7;:16;;;;;;;;;;;;:::i;:::-;;705:44;448:29;;;;;;;;;;;;;;;;;;;412:21;;;;;;;;;;;;;;;;;;;378:19;;;;;;;;;;;;;;;;;;;371:63;:107;705:18;;;:44;;;:::i;:::-;526:228;;88:2051;;1442:190:30;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;88:2051:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "88:2051:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2840:202:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2840:202:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2840:202:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:133:30;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:77:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;846:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;846:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9760:217:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9760:217:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9760:217:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5113:178;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5113:178:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5113:178:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5763:456;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5763:456:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5763:456:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7931:514;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7931:514:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7931:514:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:81:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1019:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1019:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8717:385:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8717:385:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8717:385:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7028:199;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7028:199:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7028:199:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4467:326;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4467:326:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4467:326:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:136:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1283:136:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1283:136:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1283:136:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3831:185:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3831:185:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3831:185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6563:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6563:188:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6563:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3327:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3327:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3327:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7534:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7534:138:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7534:138:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10700:262;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10700:262:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10700:262:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;10700:262:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10700:262:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10700:262:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;10700:262:0;;;;;;;;;;;;;;;;;;2840:202;2910:7;2950:1;2933:19;;:5;:19;;;;2925:28;;;;;;;;2959:15;2977:40;:16;:23;2994:5;2977:23;;;;;;;;;;;;;;;:30;3001:5;2977:30;;;;;;;;;;;:38;:40::i;:::-;2959:58;;3030:7;3023:14;;;2840:202;;;;:::o;915:133:30:-;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;846:77:4:-;885:13;913:5;906:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:77;:::o;9760:217:0:-;9927:45;9944:4;9950:2;9954:6;9962:5;9927:45;;;;;;;;;;;;;:16;:45::i;:::-;9760:217;;;;:::o;5113:178::-;5194:7;5217:22;5225:6;5233:5;5217:7;:22::i;:::-;5209:31;;;;;;;;5253:18;:26;5272:6;5253:26;;;;;;;;;;;:33;5280:5;5253:33;;;;;;;;;;;;;;;;;;;;;5246:40;;5113:178;;;;:::o;5763:456::-;5857:13;5873:22;5881:6;5889:5;5873:7;:22::i;:::-;5857:38;;5901:10;5914:22;5922:6;5930:5;5914:7;:22::i;:::-;5901:35;;5956:5;5950:11;;:2;:11;;;;:23;;;;5971:2;5965:8;;:2;:8;;;;5950:23;5942:33;;;;;;;;6003:5;5989:19;;:10;:19;;;:39;;;;6026:2;6012:16;;:10;:16;;;5989:39;:78;;;;6032:35;6049:5;6056:10;6032:16;:35::i;:::-;5989:78;:114;;;;6071:32;6088:2;6092:10;6071:16;:32::i;:::-;5989:114;5981:123;;;;;;;;6152:2;6111:23;:31;6135:6;6111:31;;;;;;;;;;;:38;6143:5;6111:38;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;6195:2;6166:47;;6188:5;6166:47;;;6199:6;6207:5;6166:47;;;;;;;;;;;;;;;;;;;;;;;;5763:456;;;;;:::o;7931:514::-;8017:31;8034:6;8042:5;8017:16;:31::i;:::-;8009:40;;;;;;;;8055:13;8071:22;8079:6;8087:5;8071:7;:22::i;:::-;8055:38;;8099:10;8112:22;8120:6;8128:5;8112:7;:22::i;:::-;8099:35;;8162:39;8187:6;8195:5;8162:24;:39::i;:::-;8148:53;;:10;:53;;;:92;;;;8205:35;8222:5;8229:10;8205:16;:35::i;:::-;8148:92;:128;;;;8244:32;8261:2;8265:10;8244:16;:32::i;:::-;8148:128;8140:137;;;;;;;;8322:5;8284:20;:28;8305:6;8284:28;;;;;;;;;;;:35;8313:5;8284:35;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;8369:10;8333:18;:26;8352:6;8333:26;;;;;;;;;;;:33;8360:5;8333:33;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;8427:5;8419:6;8407:10;8390:49;;;8434:4;8390:49;;;;;;;;;;;;;;;;;;;;;;7931:514;;;;:::o;1019:81:4:-;1060:13;1088:7;1081:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:81;:::o;8717:385:0:-;8807:31;8824:6;8832:5;8807:16;:31::i;:::-;8806:32;8798:41;;;;;;;;8845:16;8864:18;:26;8883:6;8864:26;;;;;;;;;;;:33;8891:5;8864:33;;;;;;;;;;;;;;;;;;;;;8845:52;;8925:8;8911:22;;:10;:22;;;8903:31;;;;;;;;8979:4;8941:20;:28;8962:6;8941:28;;;;;;;;;;;:35;8970:5;8941:35;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;9033:1;8989:18;:26;9008:6;8989:26;;;;;;;;;;;:33;9016:5;8989:33;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;9083:5;9075:6;9063:10;9046:50;;;9090:5;9046:50;;;;;;;;;;;;;;;;;;;;;;8717:385;;;:::o;7028:199::-;7109:10;7103:16;;:2;:16;;;;7095:25;;;;;;;;7163:8;7126:18;:30;7145:10;7126:30;;;;;;;;;;;;;;;:34;7157:2;7126:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7209:2;7182:40;;7197:10;7182:40;;;7213:8;7182:40;;;;;;;;;;;;;;;;;;;;;;7028:199;;:::o;4467:326::-;4553:13;4569:22;4577:6;4585:5;4569:7;:22::i;:::-;4553:38;;4611:5;4605:11;;:2;:11;;;;4597:20;;;;;;;;4645:5;4631:19;;:10;:19;;;:58;;;;4654:35;4671:5;4678:10;4654:16;:35::i;:::-;4631:58;4623:67;;;;;;;;4733:2;4697:18;:26;4716:6;4697:26;;;;;;;;;;;:33;4724:5;4697:33;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;4770:2;4746:42;;4763:5;4746:42;;;4774:6;4782:5;4746:42;;;;;;;;;;;;;;;;;;;;;;;;4467:326;;;;:::o;1283:136:4:-;1337:13;1366:17;1374:6;1381:1;1366:7;:17::i;:::-;1358:26;;;;;;;;1397:9;:17;1407:6;1397:17;;;;;;;;;;;1390:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:136;;;:::o;3831:185:0:-;3900:7;3915:18;3936:8;;;;;;3915:29;;3950:13;3966:27;3974:6;3982:10;3966:7;:27::i;:::-;3950:43;;4006:5;3999:12;;;;3831:185;;;;:::o;6563:188::-;6649:7;6672:22;6680:6;6688:5;6672:7;:22::i;:::-;6664:31;;;;;;;;6708:23;:31;6732:6;6708:31;;;;;;;;;;;:38;6740:5;6708:38;;;;;;;;;;;;;;;;;;;;;6701:45;;6563:188;;;;:::o;3327:182::-;3396:7;3411:13;3427:10;:18;3438:6;3427:18;;;;;;;;;;;:25;3446:5;3427:25;;;;;;;;;;;;;;;;;;;;;3411:41;;3483:1;3466:19;;:5;:19;;;;3458:28;;;;;;;;3499:5;3492:12;;;3327:182;;;;:::o;7534:138::-;7614:4;7632:18;:25;7651:5;7632:25;;;;;;;;;;;;;;;:35;7658:8;7632:35;;;;;;;;;;;;;;;;;;;;;;;;;7625:42;;7534:138;;;;:::o;10700:262::-;10853:49;10876:10;10888:6;10896:5;10853:22;:49::i;:::-;10845:58;;;;;;;;10909:48;10927:4;10933:2;10937:6;10945:5;10952:4;10909:17;:48::i;:::-;10700:262;;;;;:::o;1063:112:23:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;13447:161:0:-;13518:4;13530:13;13546:10;:18;13557:6;13546:18;;;;;;;;;;;:25;13565:5;13546:25;;;;;;;;;;;;;;;;;;;;;13530:41;;13601:1;13584:19;;:5;:19;;;;13577:26;;;13447:161;;;;:::o;12995:225::-;13075:4;13097:22;13105:6;13113:5;13097:7;:22::i;:::-;13089:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13180:20;:28;13201:6;13180:28;;;;;;;;;;;:35;13209:5;13180:35;;;;;;;;;;;;;;;;;;;;;13173:42;;12995:225;;;;:::o;12329:410::-;12432:4;12454:22;12462:6;12470:5;12454:7;:22::i;:::-;12446:31;;;;;;;;12485:13;12501:22;12509:6;12517:5;12501:7;:22::i;:::-;12485:38;;12531:10;12544:22;12552:6;12560:5;12544:7;:22::i;:::-;12531:35;;12593:5;12582:16;;:7;:16;;;:33;;;;12613:2;12602:13;;:7;:13;;;12582:33;:82;;;;12657:7;12619:45;;:34;12639:6;12647:5;12619:19;:34::i;:::-;:45;;;12582:82;:118;;;;12668:32;12685:5;12692:7;12668:16;:32::i;:::-;12582:118;:151;;;;12704:29;12721:2;12725:7;12704:16;:29::i;:::-;12582:151;12574:160;;;;12329:410;;;;;:::o;11697:231::-;11817:38;11831:4;11837:2;11841:6;11849:5;11817:13;:38::i;:::-;11871:51;11892:4;11898:2;11902:6;11910:5;11917:4;11871:20;:51::i;:::-;11863:60;;;;;;;;11697:231;;;;;:::o;17297:408::-;17428:4;17403:29;;:21;17411:6;17418:5;17403:7;:21::i;:::-;:29;;;17394:40;;;;;;;;17464:1;17450:16;;:2;:16;;;;17442:25;;;;;;;;17476:29;17491:6;17499:5;17476:14;:29::i;:::-;17514:41;:16;:22;17531:4;17514:22;;;;;;;;;;;;;;;:29;17537:5;17514:29;;;;;;;;;;;:39;:41::i;:::-;17563:39;:16;:20;17580:2;17563:20;;;;;;;;;;;;;;;:27;17584:5;17563:27;;;;;;;;;;;:37;:39::i;:::-;17639:2;17611:10;:18;17622:6;17611:18;;;;;;;;;;;:25;17630:5;17611:25;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;17682:2;17655:45;;17676:4;17655:45;;17664:10;17655:45;;;17686:6;17694:5;17655:45;;;;;;;;;;;;;;;;;;;;;;;;17297:408;;;;:::o;18374:340::-;18503:4;18524:15;:2;:13;;;:15::i;:::-;18523:16;18519:54;;;18560:4;18553:11;;;;18519:54;18581:13;18611:2;18597:32;;;18630:10;18642:4;18648:6;18656:5;18663:4;18597:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18597:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18597:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18597:71:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18597:71:0;;;;;;;;;;;;;;;;18581:87;;469:58;;;;;;;;;;;;;;;;;;;;;;;;18684:24;;;:6;:24;;;;18676:33;;;18374:340;;;;;;;;:::o;18921:332::-;19041:1;18996:47;;:18;:26;19015:6;18996:26;;;;;;;;;;;:33;19023:5;18996:33;;;;;;;;;;;;;;;;;;;;;:47;;;;18992:120;;;19101:1;19057:18;:26;19076:6;19057:26;;;;;;;;;;;:33;19084:5;19057:33;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;18992:120;19173:1;19123:52;;:23;:31;19147:6;19123:31;;;;;;;;;;;:38;19155:5;19123:38;;;;;;;;;;;;;;;;;;;;;:52;;;;19119:130;;;19238:1;19189:23;:31;19213:6;19189:31;;;;;;;;;;;:38;19221:5;19189:38;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;19119:130;18921:332;;:::o;1276:108:23:-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;1181:89::-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;542:413:73:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;1274:179:38:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport './ERCX.sol';\nimport '../Interface/IERCXMetadata.sol';\n\ncontract ERCXMetadata is ERC165, ERCX, IERCXMetadata {\n  // item name\n  string internal _name;\n\n  // item symbol\n  string internal _symbol;\n\n  // Optional mapping for item URIs\n  mapping(uint256 => string) private _itemURIs;\n\n  bytes4 private constant InterfaceId_ERCXMetadata =\n    bytes4(keccak256('name()')) ^\n    bytes4(keccak256('symbol()')) ^\n    bytes4(keccak256('itemURI(uint256)'));\n\n  /**\n   * @dev Constructor function\n   */\n  constructor(string memory name, string memory symbol) public {\n    _name = name;\n    _symbol = symbol;\n\n    // register the supported interfaces to conform to ERCX via ERC165\n    _registerInterface(InterfaceId_ERCXMetadata);\n  }\n\n  /**\n   * @dev Gets the item name\n   * @return string representing the item name\n   */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev Gets the item symbol\n   * @return string representing the item symbol\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev Returns an URI for a given item ID\n   * Throws if the item ID does not exist. May return an empty string.\n   * @param itemId uint256 ID of the item to query\n   */\n  function itemURI(uint256 itemId) public view returns (string memory) {\n    require(_exists(itemId,1));\n    return _itemURIs[itemId];\n  }\n\n  /**\n   * @dev Internal function to set the item URI for a given item\n   * Reverts if the item ID does not exist\n   * @param itemId uint256 ID of the item to set its URI\n   * @param uri string URI to assign\n   */\n  function _setItemURI(uint256 itemId, string memory uri) internal {\n    require(_exists(itemId,1));\n    _itemURIs[itemId] = uri;\n  }\n\n  /**\n   * @dev Internal function to burn a specific item\n   * Reverts if the item does not exist\n   * @param itemId uint256 ID of the item being burned by the msg.sender\n   */\n  function _burn(uint256 itemId) internal {\n    super._burn(itemId);\n\n    // Clear metadata (if any)\n    if (bytes(_itemURIs[itemId]).length != 0) {\n      delete _itemURIs[itemId];\n    }\n  }\n}\n\n\n\n\n",
  "sourcePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Contract/ERCXMetadata.sol",
  "ast": {
    "absolutePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Contract/ERCXMetadata.sol",
    "exportedSymbols": {
      "ERCXMetadata": [
        2034
      ]
    },
    "id": 2035,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1895,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Contract/ERCX.sol",
        "file": "./ERCX.sol",
        "id": 1896,
        "nodeType": "ImportDirective",
        "scope": 2035,
        "sourceUnit": 1240,
        "src": "25:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Interface/IERCXMetadata.sol",
        "file": "../Interface/IERCXMetadata.sol",
        "id": 1897,
        "nodeType": "ImportDirective",
        "scope": 2035,
        "sourceUnit": 2547,
        "src": "46:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1898,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4980,
              "src": "113:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$4980",
                "typeString": "contract ERC165"
              }
            },
            "id": 1899,
            "nodeType": "InheritanceSpecifier",
            "src": "113:6:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1900,
              "name": "ERCX",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1239,
              "src": "121:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERCX_$1239",
                "typeString": "contract ERCX"
              }
            },
            "id": 1901,
            "nodeType": "InheritanceSpecifier",
            "src": "121:4:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1902,
              "name": "IERCXMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2546,
              "src": "127:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERCXMetadata_$2546",
                "typeString": "contract IERCXMetadata"
              }
            },
            "id": 1903,
            "nodeType": "InheritanceSpecifier",
            "src": "127:13:4"
          }
        ],
        "contractDependencies": [
          1239,
          2494,
          2546,
          4980,
          5184
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2034,
        "linearizedBaseContracts": [
          2034,
          2546,
          1239,
          2494,
          4980,
          5184
        ],
        "name": "ERCXMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1905,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2034,
            "src": "160:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1904,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "160:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1907,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2034,
            "src": "203:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1906,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "203:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1911,
            "name": "_itemURIs",
            "nodeType": "VariableDeclaration",
            "scope": 2034,
            "src": "267:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1910,
              "keyType": {
                "id": 1908,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "267:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1909,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "286:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1930,
            "name": "InterfaceId_ERCXMetadata",
            "nodeType": "VariableDeclaration",
            "scope": 2034,
            "src": "316:162:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1912,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "316:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              },
              "id": 1929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "id": 1923,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "6e616d652829",
                          "id": 1915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "388:8:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_06fdde0383f15d582d1a74511486c9ddf862a882fb7904b3d9fe9b8b8e58a796",
                            "typeString": "literal_string \"name()\""
                          },
                          "value": "name()"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_06fdde0383f15d582d1a74511486c9ddf862a882fb7904b3d9fe9b8b8e58a796",
                            "typeString": "literal_string \"name()\""
                          }
                        ],
                        "id": 1914,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10229,
                        "src": "378:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "378:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    ],
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "371:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_bytes4_$",
                      "typeString": "type(bytes4)"
                    },
                    "typeName": "bytes4"
                  },
                  "id": 1917,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "371:27:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "^",
                "rightExpression": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "73796d626f6c2829",
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "422:10:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
                            "typeString": "literal_string \"symbol()\""
                          },
                          "value": "symbol()"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
                            "typeString": "literal_string \"symbol()\""
                          }
                        ],
                        "id": 1919,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10229,
                        "src": "412:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "412:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    ],
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "405:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_bytes4_$",
                      "typeString": "type(bytes4)"
                    },
                    "typeName": "bytes4"
                  },
                  "id": 1922,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "405:29:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "src": "371:63:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "^",
              "rightExpression": {
                "argumentTypes": null,
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6974656d5552492875696e7432353629",
                        "id": 1926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "458:18:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_acb35dc767ab25c590e15d5d2871c8558eac02b870abe5f1c9909f2e9e475f1a",
                          "typeString": "literal_string \"itemURI(uint256)\""
                        },
                        "value": "itemURI(uint256)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_acb35dc767ab25c590e15d5d2871c8558eac02b870abe5f1c9909f2e9e475f1a",
                          "typeString": "literal_string \"itemURI(uint256)\""
                        }
                      ],
                      "id": 1925,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10229,
                      "src": "448:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  ],
                  "id": 1924,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "441:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_bytes4_$",
                    "typeString": "type(bytes4)"
                  },
                  "typeName": "bytes4"
                },
                "id": 1928,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "441:37:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "src": "371:107:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1949,
              "nodeType": "Block",
              "src": "587:167:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1937,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1905,
                      "src": "593:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1938,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "601:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "593:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "593:12:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1941,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1907,
                      "src": "611:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1942,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "621:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "611:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1944,
                  "nodeType": "ExpressionStatement",
                  "src": "611:16:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1946,
                        "name": "InterfaceId_ERCXMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1930,
                        "src": "724:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1945,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4979,
                      "src": "705:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1948,
                  "nodeType": "ExpressionStatement",
                  "src": "705:44:4"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 1950,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1950,
                  "src": "538:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1950,
                  "src": "558:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:42:4"
            },
            "returnParameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:0:4"
            },
            "scope": 2034,
            "src": "526:228:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1957,
              "nodeType": "Block",
              "src": "900:23:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1955,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1905,
                    "src": "913:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1954,
                  "id": 1956,
                  "nodeType": "Return",
                  "src": "906:12:4"
                }
              ]
            },
            "documentation": "@dev Gets the item name\n@return string representing the item name",
            "id": 1958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:2:4"
            },
            "returnParameters": {
              "id": 1954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1953,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "885:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1952,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "884:15:4"
            },
            "scope": 2034,
            "src": "846:77:4",
            "stateMutability": "view",
            "superFunction": 2540,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1965,
              "nodeType": "Block",
              "src": "1075:25:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1963,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1907,
                    "src": "1088:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1962,
                  "id": 1964,
                  "nodeType": "Return",
                  "src": "1081:14:4"
                }
              ]
            },
            "documentation": "@dev Gets the item symbol\n@return string representing the item symbol",
            "id": 1966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1034:2:4"
            },
            "returnParameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1961,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "1060:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1059:15:4"
            },
            "scope": 2034,
            "src": "1019:81:4",
            "stateMutability": "view",
            "superFunction": 2545,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1984,
              "nodeType": "Block",
              "src": "1352:67:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1975,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1968,
                            "src": "1374:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1381:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 1974,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "1366:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) view returns (bool)"
                          }
                        },
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1366:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10238,
                        10239
                      ],
                      "referencedDeclaration": 10238,
                      "src": "1358:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1979,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1980,
                      "name": "_itemURIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1911,
                      "src": "1397:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1982,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1981,
                      "name": "itemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1968,
                      "src": "1407:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1397:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1972,
                  "id": 1983,
                  "nodeType": "Return",
                  "src": "1390:24:4"
                }
              ]
            },
            "documentation": "@dev Returns an URI for a given item ID\nThrows if the item ID does not exist. May return an empty string.\n@param itemId uint256 ID of the item to query",
            "id": 1985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "itemURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1968,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "1300:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1299:16:4"
            },
            "returnParameters": {
              "id": 1972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1971,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "1337:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1336:15:4"
            },
            "scope": 2034,
            "src": "1283:136:4",
            "stateMutability": "view",
            "superFunction": 2535,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2005,
              "nodeType": "Block",
              "src": "1702:66:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1994,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "1724:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1731:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 1993,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "1716:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) view returns (bool)"
                          }
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1716:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10238,
                        10239
                      ],
                      "referencedDeclaration": 10238,
                      "src": "1708:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1708:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "1708:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1999,
                        "name": "_itemURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1911,
                        "src": "1740:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 2001,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2000,
                        "name": "itemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "1750:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1740:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2002,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1989,
                      "src": "1760:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1740:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2004,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:23:4"
                }
              ]
            },
            "documentation": "@dev Internal function to set the item URI for a given item\nReverts if the item ID does not exist\n@param itemId uint256 ID of the item to set its URI\n@param uri string URI to assign",
            "id": 2006,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setItemURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1987,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "1658:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1989,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "1674:17:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:35:4"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:0:4"
            },
            "scope": 2034,
            "src": "1637:131:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2032,
              "nodeType": "Block",
              "src": "1989:148:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2014,
                        "name": "itemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2008,
                        "src": "2007:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2011,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10277,
                        "src": "1995:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERCXMetadata_$2034",
                          "typeString": "contract super ERCXMetadata"
                        }
                      },
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1078,
                      "src": "1995:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2016,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:19:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2018,
                              "name": "_itemURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1911,
                              "src": "2062:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2020,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2019,
                              "name": "itemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2008,
                              "src": "2072:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2062:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2056:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2056:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2056:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2091:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2056:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2031,
                  "nodeType": "IfStatement",
                  "src": "2052:81:4",
                  "trueBody": {
                    "id": 2030,
                    "nodeType": "Block",
                    "src": "2094:39:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2102:24:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2025,
                              "name": "_itemURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1911,
                              "src": "2109:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2027,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2026,
                              "name": "itemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2008,
                              "src": "2119:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2109:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2029,
                        "nodeType": "ExpressionStatement",
                        "src": "2102:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Internal function to burn a specific item\nReverts if the item does not exist\n@param itemId uint256 ID of the item being burned by the msg.sender",
            "id": 2033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "1964:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1963:16:4"
            },
            "returnParameters": {
              "id": 2010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:0:4"
            },
            "scope": 2034,
            "src": "1949:188:4",
            "stateMutability": "nonpayable",
            "superFunction": 1078,
            "visibility": "internal"
          }
        ],
        "scope": 2035,
        "src": "88:2051:4"
      }
    ],
    "src": "0:2144:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Contract/ERCXMetadata.sol",
    "exportedSymbols": {
      "ERCXMetadata": [
        2034
      ]
    },
    "id": 2035,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1895,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Contract/ERCX.sol",
        "file": "./ERCX.sol",
        "id": 1896,
        "nodeType": "ImportDirective",
        "scope": 2035,
        "sourceUnit": 1240,
        "src": "25:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kohshiba/Desktop/Deed/ERCX/contracts/ERCX/Interface/IERCXMetadata.sol",
        "file": "../Interface/IERCXMetadata.sol",
        "id": 1897,
        "nodeType": "ImportDirective",
        "scope": 2035,
        "sourceUnit": 2547,
        "src": "46:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1898,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4980,
              "src": "113:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$4980",
                "typeString": "contract ERC165"
              }
            },
            "id": 1899,
            "nodeType": "InheritanceSpecifier",
            "src": "113:6:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1900,
              "name": "ERCX",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1239,
              "src": "121:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERCX_$1239",
                "typeString": "contract ERCX"
              }
            },
            "id": 1901,
            "nodeType": "InheritanceSpecifier",
            "src": "121:4:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1902,
              "name": "IERCXMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2546,
              "src": "127:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERCXMetadata_$2546",
                "typeString": "contract IERCXMetadata"
              }
            },
            "id": 1903,
            "nodeType": "InheritanceSpecifier",
            "src": "127:13:4"
          }
        ],
        "contractDependencies": [
          1239,
          2494,
          2546,
          4980,
          5184
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2034,
        "linearizedBaseContracts": [
          2034,
          2546,
          1239,
          2494,
          4980,
          5184
        ],
        "name": "ERCXMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1905,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2034,
            "src": "160:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1904,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "160:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1907,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2034,
            "src": "203:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1906,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "203:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1911,
            "name": "_itemURIs",
            "nodeType": "VariableDeclaration",
            "scope": 2034,
            "src": "267:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1910,
              "keyType": {
                "id": 1908,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "267:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1909,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "286:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1930,
            "name": "InterfaceId_ERCXMetadata",
            "nodeType": "VariableDeclaration",
            "scope": 2034,
            "src": "316:162:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1912,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "316:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              },
              "id": 1929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "id": 1923,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "6e616d652829",
                          "id": 1915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "388:8:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_06fdde0383f15d582d1a74511486c9ddf862a882fb7904b3d9fe9b8b8e58a796",
                            "typeString": "literal_string \"name()\""
                          },
                          "value": "name()"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_06fdde0383f15d582d1a74511486c9ddf862a882fb7904b3d9fe9b8b8e58a796",
                            "typeString": "literal_string \"name()\""
                          }
                        ],
                        "id": 1914,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10229,
                        "src": "378:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "378:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    ],
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "371:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_bytes4_$",
                      "typeString": "type(bytes4)"
                    },
                    "typeName": "bytes4"
                  },
                  "id": 1917,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "371:27:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "^",
                "rightExpression": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "73796d626f6c2829",
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "422:10:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
                            "typeString": "literal_string \"symbol()\""
                          },
                          "value": "symbol()"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
                            "typeString": "literal_string \"symbol()\""
                          }
                        ],
                        "id": 1919,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10229,
                        "src": "412:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "412:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    ],
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "405:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_bytes4_$",
                      "typeString": "type(bytes4)"
                    },
                    "typeName": "bytes4"
                  },
                  "id": 1922,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "405:29:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "src": "371:63:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "^",
              "rightExpression": {
                "argumentTypes": null,
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6974656d5552492875696e7432353629",
                        "id": 1926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "458:18:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_acb35dc767ab25c590e15d5d2871c8558eac02b870abe5f1c9909f2e9e475f1a",
                          "typeString": "literal_string \"itemURI(uint256)\""
                        },
                        "value": "itemURI(uint256)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_acb35dc767ab25c590e15d5d2871c8558eac02b870abe5f1c9909f2e9e475f1a",
                          "typeString": "literal_string \"itemURI(uint256)\""
                        }
                      ],
                      "id": 1925,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10229,
                      "src": "448:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  ],
                  "id": 1924,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "441:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_bytes4_$",
                    "typeString": "type(bytes4)"
                  },
                  "typeName": "bytes4"
                },
                "id": 1928,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "441:37:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "src": "371:107:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1949,
              "nodeType": "Block",
              "src": "587:167:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1937,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1905,
                      "src": "593:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1938,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "601:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "593:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "593:12:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1941,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1907,
                      "src": "611:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1942,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "621:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "611:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1944,
                  "nodeType": "ExpressionStatement",
                  "src": "611:16:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1946,
                        "name": "InterfaceId_ERCXMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1930,
                        "src": "724:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1945,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4979,
                      "src": "705:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1948,
                  "nodeType": "ExpressionStatement",
                  "src": "705:44:4"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 1950,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1950,
                  "src": "538:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1950,
                  "src": "558:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:42:4"
            },
            "returnParameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:0:4"
            },
            "scope": 2034,
            "src": "526:228:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1957,
              "nodeType": "Block",
              "src": "900:23:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1955,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1905,
                    "src": "913:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1954,
                  "id": 1956,
                  "nodeType": "Return",
                  "src": "906:12:4"
                }
              ]
            },
            "documentation": "@dev Gets the item name\n@return string representing the item name",
            "id": 1958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:2:4"
            },
            "returnParameters": {
              "id": 1954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1953,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "885:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1952,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "884:15:4"
            },
            "scope": 2034,
            "src": "846:77:4",
            "stateMutability": "view",
            "superFunction": 2540,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1965,
              "nodeType": "Block",
              "src": "1075:25:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1963,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1907,
                    "src": "1088:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1962,
                  "id": 1964,
                  "nodeType": "Return",
                  "src": "1081:14:4"
                }
              ]
            },
            "documentation": "@dev Gets the item symbol\n@return string representing the item symbol",
            "id": 1966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1034:2:4"
            },
            "returnParameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1961,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "1060:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1059:15:4"
            },
            "scope": 2034,
            "src": "1019:81:4",
            "stateMutability": "view",
            "superFunction": 2545,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1984,
              "nodeType": "Block",
              "src": "1352:67:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1975,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1968,
                            "src": "1374:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1381:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 1974,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "1366:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) view returns (bool)"
                          }
                        },
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1366:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10238,
                        10239
                      ],
                      "referencedDeclaration": 10238,
                      "src": "1358:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1979,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1980,
                      "name": "_itemURIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1911,
                      "src": "1397:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1982,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1981,
                      "name": "itemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1968,
                      "src": "1407:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1397:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1972,
                  "id": 1983,
                  "nodeType": "Return",
                  "src": "1390:24:4"
                }
              ]
            },
            "documentation": "@dev Returns an URI for a given item ID\nThrows if the item ID does not exist. May return an empty string.\n@param itemId uint256 ID of the item to query",
            "id": 1985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "itemURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1968,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "1300:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1299:16:4"
            },
            "returnParameters": {
              "id": 1972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1971,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "1337:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1336:15:4"
            },
            "scope": 2034,
            "src": "1283:136:4",
            "stateMutability": "view",
            "superFunction": 2535,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2005,
              "nodeType": "Block",
              "src": "1702:66:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1994,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "1724:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1731:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 1993,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "1716:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) view returns (bool)"
                          }
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1716:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10238,
                        10239
                      ],
                      "referencedDeclaration": 10238,
                      "src": "1708:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1708:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "1708:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1999,
                        "name": "_itemURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1911,
                        "src": "1740:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 2001,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2000,
                        "name": "itemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "1750:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1740:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2002,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1989,
                      "src": "1760:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1740:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2004,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:23:4"
                }
              ]
            },
            "documentation": "@dev Internal function to set the item URI for a given item\nReverts if the item ID does not exist\n@param itemId uint256 ID of the item to set its URI\n@param uri string URI to assign",
            "id": 2006,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setItemURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1987,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "1658:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1989,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "1674:17:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:35:4"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:0:4"
            },
            "scope": 2034,
            "src": "1637:131:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2032,
              "nodeType": "Block",
              "src": "1989:148:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2014,
                        "name": "itemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2008,
                        "src": "2007:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2011,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10277,
                        "src": "1995:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERCXMetadata_$2034",
                          "typeString": "contract super ERCXMetadata"
                        }
                      },
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1078,
                      "src": "1995:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2016,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:19:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2018,
                              "name": "_itemURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1911,
                              "src": "2062:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2020,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2019,
                              "name": "itemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2008,
                              "src": "2072:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2062:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2056:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2056:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2056:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2091:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2056:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2031,
                  "nodeType": "IfStatement",
                  "src": "2052:81:4",
                  "trueBody": {
                    "id": 2030,
                    "nodeType": "Block",
                    "src": "2094:39:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2102:24:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2025,
                              "name": "_itemURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1911,
                              "src": "2109:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2027,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2026,
                              "name": "itemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2008,
                              "src": "2119:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2109:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2029,
                        "nodeType": "ExpressionStatement",
                        "src": "2102:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Internal function to burn a specific item\nReverts if the item does not exist\n@param itemId uint256 ID of the item being burned by the msg.sender",
            "id": 2033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "1964:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1963:16:4"
            },
            "returnParameters": {
              "id": 2010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:0:4"
            },
            "scope": 2034,
            "src": "1949:188:4",
            "stateMutability": "nonpayable",
            "superFunction": 1078,
            "visibility": "internal"
          }
        ],
        "scope": 2035,
        "src": "88:2051:4"
      }
    ],
    "src": "0:2144:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-11-30T03:58:21.972Z",
  "devdoc": {
    "methods": {
      "approveTransfer(address,uint256,uint256)": {
        "details": "Approves another address to transfer the given item ID The zero address indicates there is no approved address. There can only be one approved address per item at a given time. Can only be called by the item owner or an approved operator.",
        "params": {
          "itemId": "uint256 ID of the item to be approved",
          "layer": "uint256 number to specify the layer",
          "to": "address to be approved for the given item ID"
        }
      },
      "approveTransferLimitFor(address,uint256,uint256)": {
        "details": "Approves another address to suspend the transfer right of the given item ID The zero address indicates there is no approved address. There can only be one approved address per item at a given time. Can only be called by the item owner or an approved operator.",
        "params": {
          "itemId": "uint256 ID of the item to be approved",
          "layer": "uint256 number to specify the layer",
          "to": "address to be approved for the given item ID"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "layer": "uint256 number to specify the layer",
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount of items owned by the passed address in the specified layer"
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApprovedTransfer(uint256,uint256)": {
        "details": "Gets the approved address for a item ID, or zero if no address set Reverts if the item ID does not exist.",
        "params": {
          "itemId": "uint256 ID of the item to query the approval of",
          "layer": "uint256 number to specify the layer"
        },
        "return": "address currently approved for the given item ID"
      },
      "getApprovedTransferLimit(uint256,uint256)": {
        "details": "Gets the approved address for suspension for transfer a item ID, or zero if no address set Reverts if the item ID does not exist.",
        "params": {
          "itemId": "uint256 ID of the item to query the approval of",
          "layer": "uint256 number to specify the layer"
        },
        "return": "address currently approved for the given item ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "itemURI(uint256)": {
        "details": "Returns an URI for a given item ID Throws if the item ID does not exist. May return an empty string.",
        "params": {
          "itemId": "uint256 ID of the item to query"
        }
      },
      "name()": {
        "details": "Gets the item name",
        "return": "string representing the item name"
      },
      "ownerOf(uint256,uint256)": {
        "details": "Gets the owner of the specified item ID",
        "params": {
          "itemId": "uint256 ID of the item to query the owner of",
          "layer": "uint256 number to specify the layer"
        },
        "return": "owner address currently marked as the owner of the given item ID in the specified layer"
      },
      "revokeTransferLimitFor(uint256,uint256)": {
        "details": "Revole the limitation of transferability of the specified item.   * Requires the msg sender to be the setter of the limitation",
        "params": {
          "itemId": "uint256 ID of the item to be transferred",
          "layer": "uint256 number to specify the layer"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256)": {
        "details": "Safely transfers the ownership of a given item ID to another address If the target address is a contract, it must implement `onERCXReceived`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERCXReceived(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.   * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the item",
          "itemId": "uint256 ID of the item to be transferred",
          "layer": "uint256 number to specify the layer",
          "to": "address to receive the ownership of the given item ID"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given item ID to another address If the target address is a contract, it must implement `onERCXReceived`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERCXReceived(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the item",
          "itemId": "uint256 ID of the item to be transferred",
          "layer": "uint256 number to specify the layer",
          "to": "address to receive the ownership of the given item ID"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all items of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "setTransferLimitFor(uint256,uint256)": {
        "details": "Limit the transferability of the specified item. msg.sender should be permitted by either owner or so(super owner)",
        "params": {
          "itemId": "uint256 ID of the item to be transferred",
          "layer": "uint256 number to specify the layer"
        }
      },
      "superOf(uint256,uint256)": {
        "details": "Gets the upper layer address of the owner of the specified item ID",
        "params": {
          "itemId": "uint256 ID of the item to query the owner of",
          "layer": "uint256 number to specify the layer"
        },
        "return": "the upper layer address currently marked as the owner of the given item ID in the specified layer"
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the item symbol",
        "return": "string representing the item symbol"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}